CartContext.js:
import React, { createContext, useContext, useReducer } from 'react';

const CartContext = createContext();

const initialState = {
  cartItems: [],
};

const cartReducer = (state, action) => {
  switch (action.type) {
    case 'ADD_TO_CART':
      const existingItemIndex = state.cartItems.findIndex(
        (item) => item.title === action.payload.title
      );
      if (existingItemIndex !== -1) {
        state.cartItems[existingItemIndex].quantity += action.payload.quantity;
        return { ...state };
      } else {
        return { ...state, cartItems: [...state.cartItems, action.payload] };
      }
    default:
      return state;
  }
};

const CartProvider = ({ children }) => {
  const [state, dispatch] = useReducer(cartReducer, initialState);

  return (
    <CartContext.Provider value={{ cartState: state, cartDispatch: dispatch }}>
      {children}
    </CartContext.Provider>
  );
};

const useCart = () => {
  const context = useContext(CartContext);
  if (!context) {
    throw new Error('useCart must be used within a CartProvider');
  }
  return context;
};

export { CartProvider, useCart };



Now, in your main App.js or any other relevant component, use the CartProvider to wrap your application:

import React from 'react';
import { CartProvider } from './CartContext';
import CartComponent from './CartComponent'; // Replace with your actual CartComponent path

const App = () => {
  return (
    <CartProvider>
      <div className="App">
        {/* Your other components */}
        <CartComponent />
      </div>
    </CartProvider>
  );
};

export default App;


Modify your CartComponent.js to use the context
import React from 'react';
import { useCart } from './CartContext';

const CartComponent = () => {
  const { cartState } = useCart();
  const { cartItems } = cartState;

  return (
    <div>
      <button className="btn btn-primary">Cart ({cartItems.length})</button>
      {/* Render cart items as before */}
    </div>
  );
};

export default CartComponent;

To add items to the cart, modify your component where you have the "Add to Cart" functionality:
jsx
import React from 'react';
import { useCart } from './CartContext';

const ProductComponent = ({ product }) => {
  const { cartDispatch } = useCart();

  const addToCart = () => {
    cartDispatch({
      type: 'ADD_TO_CART',
      payload: { ...product, quantity: 1 }, // Assuming you have a product object
    });
  };

  return (
    <div>
      {/* Product details */}
      <button className="btn btn-success" onClick={addToCart}>
        Add to Cart
      </button>
    </div>
  );
};

export default ProductComponent;

