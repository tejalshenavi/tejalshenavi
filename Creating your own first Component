//update the ExpenseTracker component and App.js to include the ExpenseForm. Here's the code:



//ExpenseForm.js:

import React, { useState } from 'react';



const ExpenseForm = ({ onAddExpense }) => {

 // Initialize state for the form inputs

 const [title, setTitle] = useState('');

 const [amount, setAmount] = useState('');

 const [date, setDate] = useState('');



 // Function to handle form submission

 const handleSubmit = (event) => {

  event.preventDefault();



  // Check if all fields are filled

  if (title.trim() === '' || amount.trim() === '' || date.trim() === '') {

   alert('Please fill all fields.');

   return;

  }



  // Create the new expense object

  const newExpense = {

   title,

   amount,

   date,

  };



  // Clear the form inputs

  setTitle('');

  setAmount('');

  setDate('');



  // Call the onAddExpense function from the parent component

  onAddExpense(newExpense);

 };



 return (

  <form onSubmit={handleSubmit}>

   <div>

    <label>Title:</label>

    <input type="text" value={title} onChange={(e) => setTitle(e.target.value)} />

   </div>

   <div>

    <label>Amount:</label>

    <input type="number" value={amount} onChange={(e) => setAmount(e.target.value)} />

   </div>

   <div>

    <label>Date:</label>

    <input type="date" value={date} onChange={(e) => setDate(e.target.value)} />

   </div>

   <button type="submit">Add Expense</button>

  </form>

 );

};



export default ExpenseForm;





//ExpenseTracker.js:

import React, { useState } from 'react';

import ExpenseForm from './ExpenseForm';



const ExpenseTracker = () => {

  // Initialize expenses state

  const [expenses, setExpenses] = useState([]);



  // Function to handle adding an expense

  const handleAddExpense = (newExpense) => {

    // Create a copy of the expenses array and add the new expense

    const updatedExpenses = [...expenses, newExpense];

    setExpenses(updatedExpenses);

  };



  return (

    <div>

      {/* Render the list of expenses */}

      <ul>

        {expenses.map((expense, index) => (

          <li key={index}>

            {expense.title} - ${expense.amount} - {expense.date}

          </li>

        ))}

      </ul>



      {/* Render the ExpenseForm component */}

      <ExpenseForm onAddExpense={handleAddExpense} />

    </div>

  );

};



export default ExpenseTracker;





//App.js:

import React from 'react';

import ExpenseTracker from './ExpenseTracker';



const App = () => {

 return (

  <div>

   <h1>Expense Tracker</h1>

   <ExpenseTracker />

  </div>

 );

};



export default App;




/////////////////________/////////////

//To achieve logging the user input in the console whenever anything is typed in the ExpenseForm, we'll use React's onChange event handlers in the input fields. Here's the updated ExpenseForm component to log the changes:

import React, { useState } from 'react';

const ExpenseForm = () => {
  // Initialize state for the form inputs
  const [title, setTitle] = useState('');
  const [amount, setAmount] = useState('');
  const [date, setDate] = useState('');

  // Event handler for input change
  const handleInputChange = (event) => {
    const { name, value } = event.target;
    console.log(`Input field "${name}" changed to: ${value}`);
    // Update the corresponding state based on the input name
    switch (name) {
      case 'title':
        setTitle(value);
        break;
      case 'amount':
        setAmount(value);
        break;
      case 'date':
        setDate(value);
        break;
      default:
        break;
    }
  };

  return (
    <form>
      <div>
        <label>Title:</label>
        <input
          type="text"
          name="title"
          value={title}
          onChange={handleInputChange}
        />
      </div>
      <div>
        <label>Amount:</label>
        <input
          type="number"
          name="amount"
          value={amount}
          onChange={handleInputChange}
        />
      </div>
      <div>
        <label>Date:</label>
        <input
          type="date"
          name="date"
          value={date}
          onChange={handleInputChange}
        />
      </div>
    </form>
  );
};

export default ExpenseForm;

